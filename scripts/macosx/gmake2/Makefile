# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  httpmessage_config = debug
  httpmessage_parse_config = debug
  test_messages_config = debug
  test_preprocessor_config = debug
  test_headers_config = debug
  test_text_config = debug

else ifeq ($(config),release)
  httpmessage_config = release
  httpmessage_parse_config = release
  test_messages_config = release
  test_preprocessor_config = release
  test_headers_config = release
  test_text_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := httpmessage httpmessage-parse test-messages test-preprocessor test-headers test-text

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

httpmessage:
ifneq (,$(httpmessage_config))
	@echo "==== Building httpmessage ($(httpmessage_config)) ===="
	@${MAKE} --no-print-directory -C . -f httpmessage.make config=$(httpmessage_config)
endif

httpmessage-parse: httpmessage
ifneq (,$(httpmessage_parse_config))
	@echo "==== Building httpmessage-parse ($(httpmessage_parse_config)) ===="
	@${MAKE} --no-print-directory -C . -f httpmessage-parse.make config=$(httpmessage_parse_config)
endif

test-messages: httpmessage
ifneq (,$(test_messages_config))
	@echo "==== Building test-messages ($(test_messages_config)) ===="
	@${MAKE} --no-print-directory -C . -f test-messages.make config=$(test_messages_config)
endif

test-preprocessor: httpmessage
ifneq (,$(test_preprocessor_config))
	@echo "==== Building test-preprocessor ($(test_preprocessor_config)) ===="
	@${MAKE} --no-print-directory -C . -f test-preprocessor.make config=$(test_preprocessor_config)
endif

test-headers: httpmessage
ifneq (,$(test_headers_config))
	@echo "==== Building test-headers ($(test_headers_config)) ===="
	@${MAKE} --no-print-directory -C . -f test-headers.make config=$(test_headers_config)
endif

test-text: httpmessage
ifneq (,$(test_text_config))
	@echo "==== Building test-text ($(test_text_config)) ===="
	@${MAKE} --no-print-directory -C . -f test-text.make config=$(test_text_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f httpmessage.make clean
	@${MAKE} --no-print-directory -C . -f httpmessage-parse.make clean
	@${MAKE} --no-print-directory -C . -f test-messages.make clean
	@${MAKE} --no-print-directory -C . -f test-preprocessor.make clean
	@${MAKE} --no-print-directory -C . -f test-headers.make clean
	@${MAKE} --no-print-directory -C . -f test-text.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   httpmessage"
	@echo "   httpmessage-parse"
	@echo "   test-messages"
	@echo "   test-preprocessor"
	@echo "   test-headers"
	@echo "   test-text"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"